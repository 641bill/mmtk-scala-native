{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/Users/bill641/.cargo/registry/src/github.com-1ecc6299db9ec823/perf-event-open-sys-1.0.1/src/lib.rs","byte_start":9307,"byte_end":9353,"line_start":197,"line_end":197,"column_start":9,"column_end":55,"is_primary":true,"text":[{"text":"        bindings::__NR_perf_event_open as libc::c_long,","highlight_start":9,"highlight_end":55}],"label":"expected `i32`, found `i64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bill641/.cargo/registry/src/github.com-1ecc6299db9ec823/perf-event-open-sys-1.0.1/src/lib.rs","byte_start":9284,"byte_end":9297,"line_start":196,"line_end":196,"column_start":5,"column_end":18,"is_primary":false,"text":[{"text":"    libc::syscall(","highlight_start":5,"highlight_end":18}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/bill641/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.142/src/unix/bsd/mod.rs","byte_start":20165,"byte_end":20172,"line_start":634,"line_end":634,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn syscall(num: ::c_int, ...) -> ::c_int;","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can convert an `i64` to an `i32` and panic if the converted value doesn't fit","code":null,"level":"help","spans":[{"file_name":"/Users/bill641/.cargo/registry/src/github.com-1ecc6299db9ec823/perf-event-open-sys-1.0.1/src/lib.rs","byte_start":9307,"byte_end":9307,"line_start":197,"line_end":197,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        bindings::__NR_perf_event_open as libc::c_long,","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"(","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/bill641/.cargo/registry/src/github.com-1ecc6299db9ec823/perf-event-open-sys-1.0.1/src/lib.rs","byte_start":9353,"byte_end":9353,"line_start":197,"line_end":197,"column_start":55,"column_end":55,"is_primary":true,"text":[{"text":"        bindings::__NR_perf_event_open as libc::c_long,","highlight_start":55,"highlight_end":55}],"label":null,"suggested_replacement":").try_into().unwrap()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bill641/.cargo/registry/src/github.com-1ecc6299db9ec823/perf-event-open-sys-1.0.1/src/lib.rs:197:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    libc::syscall(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        bindings::__NR_perf_event_open as libc::c_long,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i32`, found `i64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bill641/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.142/src/unix/bsd/mod.rs:634:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn syscall(num: ::c_int, ...) -> ::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert an `i64` to an `i32` and panic if the converted value doesn't fit\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10m(\u001b[0m\u001b[0mbindings::__NR_perf_event_open as libc::c_long\u001b[0m\u001b[0m\u001b[38;5;10m).try_into().unwrap()\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
